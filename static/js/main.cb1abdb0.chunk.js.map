{"version":3,"sources":["index.js","corona.jpg"],"names":["NavigationBar","ReactDOM","render","StrictMode","Global","document","getElementById","National","About","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","className","Link","onClick","this","loadGlobal","loadNational","loadAbout","React","Component","props","state","items","isLoaded","fetch","then","res","json","setState","style","color","TotalConfirmed","toLocaleString","TotalRecovered","TotalDeaths","margin","paddingTop","paddingBottom","chartType","data","console","log","rawData","i","Countries","push","CountryCode","Country","completeData","rootProps","options","width","height","colorAxis","colors","backgroundColor","legend","datalessRegionColor","loader","tableData","type","label","Math","abs","showRowNumber","sortColumn","sortAscending","allowHTML","cssClassNames","headerRow","tableRow","headerCell","tableCell","Number","statewise","confirmed","active","recovered","deaths","telangana","String","v","statecode","f","region","domain","resolution","src","require","align","alt","module","exports"],"mappings":"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","file":"static/js/main.cb1abdb0.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport './index.css';\r\nimport Chart from \"react-google-charts\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nclass NavigationBar extends React.Component {\r\n    loadGlobal() {\r\n        ReactDOM.render(\r\n            <React.StrictMode>\r\n                <Global/>\r\n            </React.StrictMode>,\r\n            document.getElementById('root')\r\n        );\r\n    }\r\n    \r\n    loadNational() {\r\n        ReactDOM.render(\r\n            <React.StrictMode>\r\n                <National/>\r\n            </React.StrictMode>,\r\n            document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    loadAbout() {\r\n        ReactDOM.render(\r\n            <React.StrictMode>\r\n                <About/>\r\n            </React.StrictMode>,\r\n            document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" >\r\n                    <Navbar.Brand href=\"#home\">COVID-19 STATISTICS</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"navbar\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={this.loadGlobal} className=\"navbar\">Global</Nav.Link>\r\n                            <Nav.Link onClick={this.loadNational} className=\"navbar\">National</Nav.Link>\r\n                            <Nav.Link onClick={this.loadAbout} className=\"navbar\">About COVID-19</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Global extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            isLoaded: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://api.covid19api.com/summary')\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: json,\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        var { isLoaded, items } = this.state;\r\n        function completeData(items) {\r\n            console.log(items);\r\n            var rawData = [\r\n                ['Country Code', 'Country', \"Confirmed\"],\r\n            ];\r\n            for (let i in items.Countries) {\r\n                rawData.push([items.Countries[i].CountryCode, items.Countries[i].Country, items.Countries[i].TotalConfirmed]);\r\n            }\r\n            return rawData;\r\n        }\r\n\r\n        function tableData(items){\r\n            var tableData = [[\r\n                { type: 'string', label: 'COUNTRY  ' },\r\n                { type: 'number', label: 'CONFIRMED' },\r\n                { type: 'number', label: 'ACTIVE' },\r\n                { type: 'number', label: 'RECOVERED' },\r\n                { type: 'number', label: 'DECEASED' },\r\n                ]]\r\n            \r\n            for(let i in items.Countries){\r\n                tableData.push([items.Countries[i].Country,items.Countries[i].TotalConfirmed,Math.abs(items.Countries[i].TotalConfirmed - (items.Countries[i].TotalRecovered + items.Countries[i].TotalDeaths)),items.Countries[i].TotalRecovered,items.Countries[i].TotalDeaths]);\r\n            }\r\n            return tableData;\r\n        }\r\n\r\n        if (!isLoaded) {\r\n            return <div>Loading...</div>\r\n        }\r\n        else {\r\n            return(\r\n                <div>\r\n                    <NavigationBar/>\r\n                    <h1>GLOBAL STATISTICS</h1>\r\n                    <p><label style={{ color: '#fe073a' }}>Confirmed: {items.Global.TotalConfirmed.toLocaleString('en-IN')}</label>\r\n                        &emsp; <label style={{ color: '#007bfe'}}>Active: {(items.Global.TotalConfirmed - (items.Global.TotalRecovered + items.Global.TotalDeaths)).toLocaleString('en-IN')}</label>\r\n                        &emsp; <label style={{ color: '#28a645'}}>Recovered: {items.Global.TotalRecovered.toLocaleString('en-IN')}</label> \r\n                        &emsp; <label style={{ color: '#6c757d'}}>Deceased: {items.Global.TotalDeaths.toLocaleString('en-IN')}</label>\r\n                    </p> \r\n                    <Chart\r\n                        style={{\r\n                            margin: \"0px auto\",\r\n                            paddingTop: \"25px\",\r\n                            paddingBottom: \"10vh\"\r\n                        }}\r\n                        chartType=\"GeoChart\"\r\n                        data={completeData(items)}\r\n                        rootProps={{ 'data-testid': '1' }}\r\n                        options={{\r\n                            width: '100vw',\r\n                            height: '75vh',\r\n                            colorAxis: { colors: ['#FF5959', '#FF0000'] },\r\n                            backgroundColor: '#161625',\r\n                            legend: 'none',\r\n                            datalessRegionColor: \"#161625\",\r\n                        }}\r\n                    />\r\n                    <Chart\r\n                        style = {{\r\n                            margin : \"0px auto\",\r\n                        }}\r\n                        chartType=\"Table\"\r\n                        loader={<div>Loading Chart</div>}\r\n                        data={tableData(items)}\r\n                        options={{\r\n                            showRowNumber: true,\r\n                            height: '100%',\r\n                            width: '75vw',\r\n                            sortColumn: 1,\r\n                            sortAscending: false,\r\n                            allowHTML: true,\r\n                            cssClassNames: {\r\n                                headerRow: 'header-row',\r\n                                tableRow: 'table-row',\r\n                                headerCell: 'header-cell',\r\n                                tableCell: 'table-cell',\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass National extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            isLoaded: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://api.covid19india.org/data.json')\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: json,\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        var { isLoaded, items } = this.state;\r\n        \r\n        function completeData(items) {\r\n            var rawData = [\r\n                [\"State\", \"Confirmed\"],\r\n            ];\r\n\r\n            var telangana = [];\r\n            for(let i in items.statewise){\r\n                if(items.statewise[i].state === \"Telangana\"){\r\n                    telangana.push(items.statewise[i].state);\r\n                    telangana.push(items.statewise[i].confirmed);\r\n                }\r\n            }\r\n\r\n            for (let i in items.statewise) {\r\n                if(String(items.statewise[i].state) !== \"Total\"){\r\n                    if(items.statewise[i].state === \"Andhra Pradesh\"){\r\n                        console.log(telangana[1])\r\n                        rawData.push([{v: ('IN-'+items.statewise[i].statecode), f : items.statewise[i].state+'+'+telangana[0]},Number(items.statewise[i].confirmed)+Number(telangana[1])]);\r\n                    }\r\n                    else\r\n                    {\r\n                        rawData.push([{v: ('IN-'+items.statewise[i].statecode),f: items.statewise[i].state},Number(items.statewise[i].confirmed)]);\r\n                    }   \r\n                }\r\n            }\r\n            return rawData;\r\n        }\r\n\r\n        function tableData(items) {\r\n            var tableData = [[\r\n                { type: 'string', label: 'STATE' },\r\n                { type: 'number', label: 'CONFIRMED' },\r\n                { type: 'number', label: 'ACTIVE' },\r\n                { type: 'number', label: 'RECOVERED' },\r\n                { type: 'number', label: 'DECEASED' },\r\n            ]]\r\n\r\n            for (let i in items.statewise) {\r\n                if(items.statewise[i].state !== \"Total\"){\r\n                    tableData.push([items.statewise[i].state, Number(items.statewise[i].confirmed), Number(items.statewise[i].active), Number(items.statewise[i].recovered), Number(items.statewise[i].deaths)]);    \r\n                }\r\n            }\r\n            return tableData;\r\n        }\r\n\r\n        if (!isLoaded) {\r\n            return <div>Loading...</div>\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <NavigationBar/>\r\n                    <h1>NATIONAL STATISTICS</h1>\r\n                    <p>\r\n                        <label style={{ color: '#fe073a' }}>Confirmed: {(Number(items.statewise[0].confirmed)).toLocaleString('en-IN')}</label>\r\n                            &emsp; <label style={{ color: '#007bfe'}}>Active: {(Number(items.statewise[0].active)).toLocaleString('en-IN')}</label>\r\n                            &emsp; <label style={{ color: '#28a645'}}>Recovered: {(Number(items.statewise[0].recovered)).toLocaleString('en-IN')}</label> \r\n                            &emsp; <label style={{ color: '#6c757d'}}>Deceased: {(Number(items.statewise[0].deaths)).toLocaleString('en-IN')}</label>\r\n                        </p>\r\n                    <Chart\r\n                        width={'90vw'}\r\n                        height={'75vh'}\r\n                        style={{\r\n                            margin: \"0px auto\",\r\n                            paddingTop: \"25px\",\r\n                            paddingBottom: \"10vh\"\r\n                        }}\r\n                        chartType=\"GeoChart\"\r\n                        data={completeData(items)}\r\n                        rootProps={{ 'data-testid': '1' }}\r\n                        options={{\r\n                            colorAxis: { colors: ['#FF5960', '#FF0000'] },\r\n                            region: 'IN',\r\n                            domain: 'IN',\r\n                            backgroundColor: '#161625',\r\n                            legend: 'none',\r\n                            datalessRegionColor: '#161625',\r\n                            resolution: 'provinces',\r\n                        }}\r\n                    />\r\n                    <Chart\r\n                        style = {{\r\n                            margin : \"0px auto\",\r\n                        }}\r\n                        chartType=\"Table\"\r\n                        loader={<div>Loading Chart</div>}\r\n                        data={tableData(items)}\r\n                        options={{\r\n                            showRowNumber: true,\r\n                            height: '100%',\r\n                            width: '75vw',\r\n                            sortColumn: 1,\r\n                            sortAscending: false,\r\n                            allowHTML: true,\r\n                            cssClassNames: {\r\n                                headerRow: 'header-row',\r\n                                tableRow: 'table-row',\r\n                                headerCell: 'header-cell',\r\n                                tableCell: 'table-cell',\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nclass About extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className = 'about'>\r\n            <NavigationBar/>\r\n            <p>\r\n            <img src={require('./corona.jpg')} align=\"right\" alt = \"Corona Img\"/>\r\n            Coronaviruses are a large family of viruses, including some that cause the common cold to some that cause major diseases such as the Severe Acute Respiratory Syndrome (SARS) and the Middle East Respiratory Syndrome (MERS).<br /> <br />\r\n            The coronavirus (COVID-19) outbreak came to light when on December 31, 2019, China informed the World Health Organization (WHO) of a cluster of cases of pneumonia of an unknown cause in Wuhan City in Hubei province. On January 9, 2020, the WHO issued a statement saying Chinese researchers have made “preliminary determination” of the virus as a novel coronavirus.<br /> <br />\r\n\r\n            Since then, more than 3,000 deaths have been reported due to COVID-19 across the world. Cases have been reported from more than 80 countries, including India. The virus has acquired the ability to spread among humans, with cases of human-to-human transmissions being reported first in Vietnam and Germany.<br /> <br />\r\n\r\n            With the overall cases worldwide rising rapidly, the WHO has declared the outbreak a global health emergency.<br /> <br />\r\n\r\n\r\n            COVID-19 symptoms can include fever, cough and shortness of breath. The illness also causes lung lesions and pneumonia. Milder cases may resemble the flu or a bad cold, making detection difficult. Chinese researchers have shared the whole genome sequence of COVID-19, however apart from some basic details, not much is known about the virus in terms of its source, precise duration of incubation, severity, and what makes it quite easily transmissible.<br /> <br />\r\n            </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <National/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","module.exports = __webpack_public_path__ + \"static/media/corona.73917263.jpg\";"],"sourceRoot":""}